@using System;
@using GymSite.Models.Views;
@model NewTrainingView;
@{
    ViewData["Title"] = "Assign to training";
    DateTime PrevDay = Model.CurrDate.AddDays(-1);
    DateTime NextDay = Model.CurrDate.AddDays(1);
}

<h2>@ViewData["Title"] at @Model.CurrDate.ToString("dd - MM - yyyy")</h2>

<div class="container">
<ul class="navbar-nav flex-grow-1 flex-sm-row">
    <li class="nav-item">
        <a class="btn btn-outline-dark" asp-action="Train" asp-route-id="@Model.client.ID" asp-route-when="@PrevDay">Previous</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-outline-dark" asp-action="Train" asp-route-when="@DateTime.Now" asp-route-id="@Model.client.ID">Today</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-outline-dark" asp-action="Train" asp-route-when="@NextDay" asp-route-id="@Model.client.ID">Next</a>
    </li>
</ul>
</div>
<table>
@if (Model.Trainings.Count>0){
@foreach (TrainingView item in Model.Trainings){
<tr>
<td>
    @{
        DateTime time = new DateTime(1,1,1,item.ID,0,0);
        @time.ToString("HH:mm");
    }
</td>
@if (item.ID_Training == 0)
{
    <td><a class="btn btn-outline-dark" style="text-align: center; width: 100%;">Vacant position</a></td>
} else {
<td>
@if (item.IsRight){
    <a class="btn btn-outline-dark">Trainer: @item.TrainerName<br />
    Group: @item.GroupTypeName </a>
} else {
    <p class="btn">Trainer: @item.TrainerName<br />
    Group: @item.GroupTypeName (Not applicable)</p>
}
</td>
<td>@item.ClientsCount.ToString()</td>
}
</tr>
}
}
</table>